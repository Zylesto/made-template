transform ConvertCelsiusToFahrenheit {
  from temperatureInCelsius oftype decimal;
  to temperatureInFahrenheit oftype decimal;

  temperatureInFahrenheit: (temperatureInCelsius * 9/5) + 32;
}

constraint MonthRangeConstraint oftype RangeConstraint {
    lowerBound: 1;
    upperBound: 12;
}

valuetype Month oftype integer {
    constraints: [MonthRangeConstraint];
}

constraint TrueFalseGermanConstraint oftype AllowlistConstraint {
    allowlist: ["Ja", "Nein"];
}

valuetype GermanBoolean oftype text {
    constraints: [TrueFalseGermanConstraint];
}

pipeline SensorDataPipeline {
    block DownloadData oftype HttpDownloader {
        downloadUrl: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ExtractZipFile oftype ZipFileExtractor {
        zipFormat: "zip";
    }

    block SelectDataFile oftype CsvFileSelector {
        csvPath: "data.csv";
    }

    block ReadTextFile oftype TextFileReader {}
    block ParseCsv oftype CsvParser { columnSeparator: ';';}

    block ChooseColumns oftype ColumnSelector {
        selectRange: range A1:G*;
    }

    block DiscardColumns oftype ColumnsDiscarder {
        discardList: [column H, column I, column J, column K];
    }

    block DataTableSetup oftype DataTableConfigurator {
        hasHeader: false;
        dataTableColumns: [
            "DeviceID" oftype integer,
            "Manufacturer" oftype text,
            "Model" oftype text,
            "MonthUsed" oftype Month,
            "AmbientTempCelsius" oftype decimal,
            "BatteryTempCelsius" oftype decimal,
            "DeviceActive" oftype GermanBoolean,
        ];
    }

    block ConvertAmbientTemp oftype DataTransformer {
        inputColumn: "AmbientTempCelsius";
        outputColumn: "AmbientTempCelsius";
        transformationUse: ConvertCelsiusToFahrenheit;
    }

    block ConvertBatteryTemp oftype DataTransformer {
        inputColumn: "BatteryTempCelsius";
        outputColumn: "BatteryTempCelsius";
        transformationUse: ConvertCelsiusToFahrenheit;
    }

    block LoadDataToDatabase oftype DatabaseUploader {
        tableName: "temperatures"; 
        databaseFile: "./temperatures.sqlite";
    }

    DownloadData
        -> ExtractZipFile
        -> SelectDataFile
        -> ReadTextFile
        -> ParseCsv
        -> ChooseColumns
        -> DiscardColumns
        -> DataTableSetup
        -> ConvertAmbientTemp
        -> ConvertBatteryTemp
        -> LoadDataToDatabase;
}
