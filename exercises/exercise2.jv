valuetype Verkehr oftype text {
    constraints: [ VerkehrConstraint ];
}

valuetype Laenge oftype decimal {
    constraints: [ LaengeConstraint ];
}

valuetype Breite oftype decimal {
    constraints: [ BreiteConstraint ];
}

valuetype IFOPT oftype text {
    constraints: [ IFOPTConstraint ];
}

constraint VerkehrConstraint oftype AllowlistConstraint {
    allowlist: [ "FV", "RV", "nur DPN" ];
}

constraint LaengeConstraint oftype RangeConstraint {
    lowerBound: -90;
    lowerBoundInclusive: true;
    upperBound: 90;
    upperBoundInclusive: true;
}

constraint BreiteConstraint oftype RangeConstraint {
    lowerBound: -90;
    lowerBoundInclusive: true;
    upperBound: 90;
    upperBoundInclusive: true;
}

constraint IFOPTConstraint oftype RegexConstraint {
  regex: /^[a-zA-Z]{2}:\d+:\d+(?::\d+)?$/;
}

pipeline StationDataPipeline {
    block StationDataDownloader oftype HttpExtractor {
        url: "https://download-data.deutschebahn.com/static/datasets/haltestellen/D_Bahnhof_2020_alle.CSV";
    }

    block TextFileInterpreter oftype TextFileInterpreter {}
    block CSVFormatInterpreter oftype CSVInterpreter { delimiter: ";"; }

    block StationDataTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "EVA_NR" oftype integer,
            "DS100" oftype text,
            "IFOPT" oftype IFOPT,
            "NAME" oftype text,
            "Verkehr" oftype Verkehr,
            "Laenge" oftype Laenge,
            "Breite" oftype Breite,
            "Betreiber_Name" oftype text,
            "Betreiber_Nr" oftype integer,
        ];
    }

    block StationDatabaseLoader oftype SQLiteLoader { table: "trainstops"; file: "trainstops.sqlite"; }

    StationDataDownloader
        -> TextFileInterpreter
        -> CSVFormatInterpreter
        -> StationDataTableInterpreter
        -> StationDatabaseLoader;
}
